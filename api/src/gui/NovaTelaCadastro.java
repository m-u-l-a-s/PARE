/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import java.awt.Color;
import dao.SalaDAO;
import java.util.List;
import javax.swing.ComboBoxModel;
import modelo.*;
import dao.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Franc
 */
public class NovaTelaCadastro extends javax.swing.JFrame {

    //Variaveis Globais:
    List<SalaHorario> GlobalListSalaHorario = new ArrayList<>();
    List<String> GlobalstudentNames = new ArrayList<>();
    int salaID;

    /**
     * Creates new form NovaTelaCadastro
     */
    public NovaTelaCadastro() {
        initComponents();
        PopulaCombo();
        getContentPane().setBackground(Color.decode("#658EA9"));
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        ComboSala = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextSalaNome = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableAlunos = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableHorarios = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnCadastro = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Dia", "Hora"
            }
        ));
        jTable2.setMaximumSize(new java.awt.Dimension(60, 60));
        jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTable2);
        jTable2.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(203);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(203);
        }

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(101, 142, 169));
        setIconImages(null);

        ComboSala.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboSalaItemStateChanged(evt);
            }
        });
        ComboSala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboSalaActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(136, 178, 204));
        jButton3.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/api/icones/x_circulo.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dubai", 1, 18)); // NOI18N
        jLabel3.setText("Selecionar Sala:");

        jLabel4.setFont(new java.awt.Font("Dubai", 1, 18)); // NOI18N
        jLabel4.setText("Cadastrar Sala:");

        jTextSalaNome.setForeground(new java.awt.Color(102, 102, 102));
        jTextSalaNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextSalaNomeActionPerformed(evt);
            }
        });

        jTableAlunos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Boolean(false), null}
            },
            new String [] {
                "", "Nomes"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableAlunos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        jTableAlunos.getTableHeader().setReorderingAllowed(false);
        jTableAlunos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTableAlunosFocusGained(evt);
            }
        });
        jTableAlunos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAlunosMouseClicked(evt);
            }
        });
        jTableAlunos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableAlunosKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTableAlunos);
        jTableAlunos.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (jTableAlunos.getColumnModel().getColumnCount() > 0) {
            jTableAlunos.getColumnModel().getColumn(0).setResizable(false);
            jTableAlunos.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTableAlunos.getColumnModel().getColumn(1).setPreferredWidth(368);
        }

        jTableHorarios.setFont(new java.awt.Font("Dubai", 0, 12)); // NOI18N
        jTableHorarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "", "Dia da Semana", "Hora"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableHorarios.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        jTableHorarios.setMaximumSize(new java.awt.Dimension(100, 80));
        jTableHorarios.getTableHeader().setReorderingAllowed(false);
        jTableHorarios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableHorariosKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTableHorarios);
        jTableHorarios.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (jTableHorarios.getColumnModel().getColumnCount() > 0) {
            jTableHorarios.getColumnModel().getColumn(0).setResizable(false);
            jTableHorarios.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTableHorarios.getColumnModel().getColumn(1).setPreferredWidth(184);
            jTableHorarios.getColumnModel().getColumn(2).setPreferredWidth(184);
        }

        jButton5.setBackground(new java.awt.Color(136, 178, 204));
        jButton5.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/api/icones/house.jpeg"))); // NOI18N
        jButton5.setText("Página Inicial");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(136, 178, 204));
        jButton6.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/api/icones/x_circulo.png"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Dubai", 1, 15)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Horários");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Dubai", 1, 15)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Alunos");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        btnCadastro.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        btnCadastro.setText("Cadastrar");
        btnCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastroActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        jLabel5.setText("  Exemplo: Sala 000 - Química - Turno Matutino/Noturno");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ComboSala, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextSalaNome, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(44, 44, 44))
            .addGroup(layout.createSequentialGroup()
                .addGap(451, 451, 451)
                .addComponent(btnCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboSala, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextSalaNome, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCadastro)
                .addContainerGap(598, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        List<String> studentNames = GlobalstudentNames;
        Sala salin = new Sala();
        salin.setSalaNome(ComboSala.getSelectedItem().toString());
        salin.setSalaId(new SalaDAO().getSalaId(salin.getSalaNome()));
        int ct = 0;

        for (int i = 0; i < jTableAlunos.getRowCount(); i++) {
            if (Boolean.valueOf(String.valueOf(jTableAlunos.getValueAt(i, 0)))) {
                String name = studentNames.get(i);
                AlunoDAO aluno = new AlunoDAO();
                AlunoAvaliacaoDAO alunoAvaliacao = new AlunoAvaliacaoDAO();
                int alunoId = aluno.inativarAluno(name, salin.getSalaId());

                alunoAvaliacao.inativarAlunoAvaliacao(alunoId);

                ct++;
            }
        }
        if (ct > 0) {
            JOptionPane.showMessageDialog(null, "Deletado com sucesso!");
        } else {
            JOptionPane.showMessageDialog(null, "Selecione o aluno para deletá-lo");

        }
        salin.setSalaNome(ComboSala.getSelectedItem().toString());
        salin.setSalaId(new SalaDAO().getSalaId(salin.getSalaNome()));
        populaSalaAluno(salin);


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        new TelaPrincipal(false).setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        List<SalaHorario> ListSalahorario = GlobalListSalaHorario;
        int ct = 0;
        for (int i = 0; i < jTableHorarios.getRowCount(); i++) {
            if (Boolean.valueOf(String.valueOf(jTableHorarios.getValueAt(i, 0)))) {
                int id = ListSalahorario.get(i).getSalaHorarioID();
                new SalaHorarioDAO().deleteSalaHorario(id);
                ct++;
            }
        }
        if (ct > 0) {
            JOptionPane.showMessageDialog(null, "Deletado com sucesso");
        } else {
            JOptionPane.showMessageDialog(null, "Selecione o horário para deletá-lo");
        }
        Sala salin = new Sala();
        salin.setSalaNome(ComboSala.getSelectedItem().toString());
        salin.setSalaId(new SalaDAO().getSalaId(salin.getSalaNome()));
        populaSalaHorario(salin);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void ComboSalaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboSalaItemStateChanged

    }//GEN-LAST:event_ComboSalaItemStateChanged

    private void btnCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastroActionPerformed
        // TODO add your handling code here:
        boolean VerificaSalaNovaVazia = true;
        if (ComboSala.getSelectedItem().toString().equals("Nova Sala")) {

            if (jTextSalaNome.getText().isEmpty()) {
                VerificaSalaNovaVazia = false;
                JOptionPane.showMessageDialog(null, "Nome da sala vazio!  Dados não serão cadastrados!");
            } else {
                Sala sala = new Sala();
                sala.setSalaNome(jTextSalaNome.getText());
                new SalaDAO().cadastrarSala(sala);
                salaID = sala.getSalaId();
            }

        }
        if (VerificaSalaNovaVazia) {

            try {
                for (int i = GlobalstudentNames.size(); i < jTableAlunos.getRowCount(); i++) {
                    if (!String.valueOf(jTableAlunos.getValueAt(i, 1)).isEmpty()) {
                        Aluno aluno = new Aluno();
                        aluno.setAlunoNome(String.valueOf(jTableAlunos.getValueAt(i, 1)));
                        aluno.setAlunoSalaId(salaID);
                        new AlunoDAO().cadastrar(aluno);
                        new AlunoDAO().cadastrarAlunoEmAvaliacoes(aluno);
                    }

                }

                for (int i = GlobalListSalaHorario.size(); i < jTableHorarios.getRowCount(); i++) {
                    if (!String.valueOf(jTableHorarios.getValueAt(i, 1)).isEmpty()) {
                        String dia = String.valueOf(jTableHorarios.getValueAt(i, 1));
                        String hora = String.valueOf(jTableHorarios.getValueAt(i, 2));
                        SalaHorario salahorario = new SalaHorario(salaID, dia, hora);
                        salahorario.setSalaID(salaID);
                        new SalaHorarioDAO().CadastrarSalaHorario(salahorario);
                    }

                }
            } finally {
                JOptionPane.showMessageDialog(null, "Cadastrado com sucesso!");
                PopulaCombo();
                jTextSalaNome.setText("");
            }

        }


    }//GEN-LAST:event_btnCadastroActionPerformed

    private void ComboSalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboSalaActionPerformed
        if (ComboSala.getSelectedIndex() > -1) {
            Sala salin = new Sala();
            salin.setSalaNome(ComboSala.getSelectedItem().toString());
            if (ComboSala.getSelectedItem().toString().equals("Nova Sala")) {
                jLabel4.setVisible(true);
                jTextSalaNome.setVisible(true);
                jLabel5.setVisible(true);

//            jTable1.setModel(new DefaultTableModel());
//            jTable3.setModel(new DefaultTableModel());
                salin.setSalaId(999);
                salaID = 999;
            } else {
                jLabel4.setVisible(false);
                jTextSalaNome.setVisible(false);
                jLabel5.setVisible(false);

                salaID = new SalaDAO().getSalaId(salin.getSalaNome());
                salin.setSalaId(salaID);

            }

            populaSalaAluno(salin);
            populaSalaHorario(salin);
        }
    }//GEN-LAST:event_ComboSalaActionPerformed

    private void jTableAlunosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableAlunosKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            DefaultTableModel model = (DefaultTableModel) jTableAlunos.getModel();
            model.addRow(new Object[]{false, ""});
            jTableAlunos.setModel(model);
        } else if (evt.getKeyCode() == 17) {
            DefaultTableModel model = (DefaultTableModel) jTableAlunos.getModel();
            int i = model.getRowCount() - 1;
            if (String.valueOf(model.getValueAt(i, 1)).isEmpty() && (i > GlobalstudentNames.size())) {
                model.removeRow(i);
                jTableAlunos.setModel(model);
            }

        }
    }//GEN-LAST:event_jTableAlunosKeyPressed

    private void jTableAlunosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAlunosMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jTableAlunosMouseClicked

    private void jTableAlunosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTableAlunosFocusGained
        // TODO add your handling code here:
        if (jTableAlunos.getSelectedRowCount() < 1) {
            jTableAlunos.setColumnSelectionInterval(0, 0);
        }
    }//GEN-LAST:event_jTableAlunosFocusGained

    private void jTableHorariosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableHorariosKeyPressed
        // TODO add your handling code here:
        List<SalaHorario> ListSalahorario = GlobalListSalaHorario;
        if (evt.getKeyCode() == 10) {
            DefaultTableModel model = (DefaultTableModel) jTableHorarios.getModel();
            model.addRow(new Object[]{false, "", ""});
            jTableHorarios.setModel(model);
        } else if (evt.getKeyCode() == 17) {
            DefaultTableModel model = (DefaultTableModel) jTableHorarios.getModel();
            int i = model.getRowCount() - 1;
            if (String.valueOf(model.getValueAt(i, 1)).isEmpty() && (i > ListSalahorario.size())) {
                model.removeRow(i);
                jTableHorarios.setModel(model);
            }

        }
    }//GEN-LAST:event_jTableHorariosKeyPressed

    private void jTextSalaNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextSalaNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextSalaNomeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NovaTelaCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NovaTelaCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NovaTelaCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NovaTelaCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NovaTelaCadastro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboSala;
    private javax.swing.JButton btnCadastro;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTableAlunos;
    private javax.swing.JTable jTableHorarios;
    private javax.swing.JTextField jTextSalaNome;
    // End of variables declaration//GEN-END:variables

    public void PopulaCombo() {

        ComboSala.removeAllItems();
        ComboSala.addItem("Nova Sala");

        List<String> ListSalas = new SalaDAO().buscarTodasSalas();

        for (int i = 0; i < ListSalas.size(); i++) {
            ComboSala.addItem(ListSalas.get(i));
        }

    }

    public void populaSalaAluno(Sala sala) {
        DefaultTableModel model = (DefaultTableModel) jTableAlunos.getModel();
        model.setRowCount(0);
        jTableAlunos.setModel(model);

        List<String> studentNames = new SalaDAO().buscarTodosAlunos(sala);
        GlobalstudentNames = studentNames;

        for (int i = 0; i < studentNames.size(); i++) {
            String nome = studentNames.get(i);
            model.addRow(new Object[]{false, nome});
            jTableAlunos.setModel(model);
        }
        jTableAlunos.setModel(model);
        model.addRow(new Object[]{false, ""});

    }

    public void populaSalaHorario(Sala sala) {
        DefaultTableModel model = (DefaultTableModel) jTableHorarios.getModel();
        model.setRowCount(0);
        jTableHorarios.setModel(model);
        GlobalListSalaHorario.clear();
        if (sala.getSalaNome() != "Nova Sala") {
            List<SalaHorario> ListSalaHorario = new SalaHorarioDAO().buscarTodosHorarios(sala);
            GlobalListSalaHorario = ListSalaHorario;
            for (int i = 0; i < ListSalaHorario.size(); i++) {
                String dia = ListSalaHorario.get(i).getSalaHorarioDia();
                String hora = ListSalaHorario.get(i).getSalaHorarioHora();
                model.addRow(new Object[]{false, dia, hora});
                // model.addRow(new Object[] {false, nome});
                //jTableHorarios.setModel(model);
            }
        }
        model.addRow(new Object[]{false, "", ""});
        jTableHorarios.setModel(model);
    }
}
